{"version":3,"sources":["serviceWorker.js","components/Header.js","components/StarFilled.js","components/StarNotFilled.js","components/Buttons.js","components/Page.js","index.js"],"names":["Boolean","window","location","hostname","match","Header","className","class","StarFilled","width","height","viewBox","fill","xmlns","d","Component","StarNotFilled","fill-rule","Abilities","props","ability","id","AboutMe","about_me","ContactMe","contact_me","WorkHistory","work","MyButtons","state","showAbilities","showContact","showAboutMe","showWork","handleAbilitiesClick","bind","handleAboutMeClick","handleContactClick","handleWorkClick","this","setState","onClick","React","Page","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.eced3829.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\r\n\r\nfunction Header() {\r\n    return (\r\n        <div className=\"First-page\">\r\n            <div className=\"Entry\">\r\n                <h1>Koray Uymaz</h1>\r\n                <p class=\"lead\">Interactive Resume</p>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Header;\r\n","import React, {Component} from 'react';\r\n\r\nclass StarFilled extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <svg width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" className=\"bi bi-star-fill\" fill=\"#22A39F\"\r\n                 xmlns=\"http://www.w3.org/2000/svg\">\r\n                <path\r\n                    d=\"M3.612 15.443c-.386.198-.824-.149-.746-.592l.83-4.73L.173 6.765c-.329-.314-.158-.888.283-.95l4.898-.696L7.538.792c.197-.39.73-.39.927 0l2.184 4.327 4.898.696c.441.062.612.636.283.95l-3.523 3.356.83 4.73c.078.443-.36.79-.746.592L8 13.187l-4.389 2.256z\"/>\r\n            </svg>\r\n        );\r\n    }\r\n}\r\n\r\nexport default StarFilled;\r\n","import React, {Component} from 'react';\r\n\r\nclass StarNotFilled extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <svg width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" className=\"bi bi-star\" fill=\"currentColor\"\r\n                 xmlns=\"http://www.w3.org/2000/svg\">\r\n                <path fill-rule=\"evenodd\"\r\n                      d=\"M2.866 14.85c-.078.444.36.791.746.593l4.39-2.256 4.389 2.256c.386.198.824-.149.746-.592l-.83-4.73 3.523-3.356c.329-.314.158-.888-.283-.95l-4.898-.696L8.465.792a.513.513 0 0 0-.927 0L5.354 5.12l-4.898.696c-.441.062-.612.636-.283.95l3.523 3.356-.83 4.73zm4.905-2.767l-3.686 1.894.694-3.957a.565.565 0 0 0-.163-.505L1.71 6.745l4.052-.576a.525.525 0 0 0 .393-.288l1.847-3.658 1.846 3.658a.525.525 0 0 0 .393.288l4.052.575-2.906 2.77a.564.564 0 0 0-.163.506l.694 3.957-3.686-1.894a.503.503 0 0 0-.461 0z\"/>\r\n            </svg>\r\n        );\r\n    }\r\n}\r\n\r\nexport default StarNotFilled;\r\n","import React from 'react';\r\nimport '../styles/ButtonBox.css';\r\nimport '../styles/FancyButtons.css';\r\nimport '../styles/ListStyle.css';\r\nimport StarFilled from \"./StarFilled\";\r\nimport StarNotFilled from \"./StarNotFilled\";\r\n\r\nfunction Abilities(props) {\r\n    if (!props.ability) {\r\n        return null;\r\n    }\r\n\r\n    return (\r\n        <div id=\"abilities\" class=\"container\">\r\n            <h2>Abilities</h2>\r\n            <div class=\"row\">\r\n                <div class=\"col-md-6\">\r\n                    <div className=\"grid-container\">\r\n                        <div className=\"ability\">\r\n                            <span>Bootstrap Framework</span>\r\n                        </div>\r\n                        <div className=\"score\">\r\n                                <StarFilled/>\r\n                                <StarFilled/>\r\n                                <StarFilled/>\r\n                                <StarFilled/>\r\n                                <StarNotFilled/>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction AboutMe(props) {\r\n    if (!props.about_me) {\r\n        return null;\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            Stuff About Me Will Go Here!\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction ContactMe(props) {\r\n    if (!props.contact_me) {\r\n        return null;\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            Connections that I have will go here!\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction WorkHistory(props) {\r\n    if (!props.work) {\r\n        return null;\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            My Work History Will Go Here!\r\n        </div>\r\n    );\r\n}\r\n\r\nclass MyButtons extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            showAbilities: false,\r\n            showContact: false,\r\n            showAboutMe: false,\r\n            showWork: false\r\n        };\r\n        this.handleAbilitiesClick = this.handleAbilitiesClick.bind(this);\r\n        this.handleAboutMeClick = this.handleAboutMeClick.bind(this);\r\n        this.handleContactClick = this.handleContactClick.bind(this);\r\n        this.handleWorkClick = this.handleWorkClick.bind(this);\r\n    }\r\n\r\n    handleAbilitiesClick() {\r\n        this.setState(state => ({\r\n            showAbilities: !state.showAbilities,\r\n            showAboutMe: false,\r\n            showContact: false,\r\n            showWork: false\r\n        }));\r\n    }\r\n\r\n    handleAboutMeClick() {\r\n        this.setState(state => ({\r\n            showAbilities: false,\r\n            showAboutMe: !state.showAboutMe,\r\n            showContact: false,\r\n            showWork: false\r\n        }));\r\n    }\r\n\r\n    handleContactClick() {\r\n        this.setState(state => ({\r\n            showAbilities: false,\r\n            showAboutMe: false,\r\n            showContact: !state.showContact,\r\n            showWork: false\r\n        }));\r\n    }\r\n\r\n    handleWorkClick() {\r\n        this.setState(state => ({\r\n            showAbilities: false,\r\n            showAboutMe: false,\r\n            showContact: false,\r\n            showWork: !state.showWork\r\n        }));\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"InformationPage\">\r\n                <div>\r\n                    <button className=\"myButton\" onClick={this.handleAboutMeClick}>\r\n                        About Me\r\n                    </button>\r\n                    <button className=\"myButton\" onClick={this.handleWorkClick}>\r\n                        Work History\r\n                    </button>\r\n                    <button class=\"myButton\" onClick={this.handleAbilitiesClick}>\r\n                        Abilities\r\n                    </button>\r\n                    <button class=\"myButton\" onClick={this.handleContactClick}>\r\n                        Contact Me\r\n                    </button>\r\n                </div>\r\n                <div className=\"ButtonText\">\r\n                    <Abilities ability={this.state.showAbilities}/>\r\n                    <AboutMe about_me={this.state.showAboutMe}/>\r\n                    <ContactMe contact_me={this.state.showContact}/>\r\n                    <WorkHistory work={this.state.showWork}/>\r\n                </div>\r\n            </div>\r\n        )\r\n            ;\r\n    }\r\n}\r\n\r\nexport default MyButtons;\r\n","import React from \"react\";\r\nimport Header from \"./Header\";\r\nimport MyButtons from \"./Buttons\";\r\n\r\n\r\nfunction Page() {\r\n    return (\r\n        <div>\r\n            <Header/>\r\n            <MyButtons />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Page\r\n\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'font-awesome/css/font-awesome.min.css';\nimport * as serviceWorker from './serviceWorker';\nimport Page from \"./components/Page\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <Page />\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}